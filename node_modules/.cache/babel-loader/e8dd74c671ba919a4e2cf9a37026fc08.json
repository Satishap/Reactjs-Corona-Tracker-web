{"ast":null,"code":"var _jsxFileName = \"/home/satish/MyReactjs/src/components/Chart/Cart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\nimport { Line, Bar } from 'react-chartjs-2';\n\nconst Chart = ({\n  data,\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([0]);\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }) : null;\n  const barChart = data.confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'yellow', 'rgba(255, 0, 0, 0.5)'],\n        data: [data.confirmed.value, data.recovered.value, data.deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/home/satish/MyReactjs/src/components/Chart/Cart.jsx"],"names":["React","useState","useEffect","fetchDailyData","styles","Line","Bar","Chart","data","country","dailyData","setDailyData","fetchMyAPI","initialDailyData","lineChart","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChart","value","recovered","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAIjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,CAAC,CAAD,CAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,UAAU,GAAG,YAAY;AAC3B,YAAMC,gBAAgB,GAAG,MAAMV,cAAc,EAA7C;AAEAQ,MAAAA,YAAY,CAACE,gBAAD,CAAZ;AACH,KAJD;;AAMAD,IAAAA,UAAU;AACb,GARQ,EAQN,EARM,CAAT;AAWA,QAAME,SAAS,GACXJ,SAAS,CAAC,CAAD,CAAT,gBAEQ,oBAAC,IAAD;AACI,IAAA,IAAI,EAAE;AACFK,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADN;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPV,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEG,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADC;AAEPC,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKP;AACCd,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEO,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADP;AAECH,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICG,QAAAA,eAAe,EAAE,mBAJlB;AAKCF,QAAAA,IAAI,EAAE;AALP,OALO;AAFR,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,GAmBc,IApBlB;AAyBA,QAAMG,QAAQ,GACVjB,IAAI,CAACW,SAAL,gBACE,oBAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJJ,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADJ;AAEJG,MAAAA,QAAQ,EAAE,CACR;AACEE,QAAAA,KAAK,EAAE,QADT;AAEEI,QAAAA,eAAe,EAAE,CAAC,sBAAD,EAAyB,QAAzB,EAAmC,sBAAnC,CAFnB;AAGEhB,QAAAA,IAAI,EAAE,CAACA,IAAI,CAACW,SAAL,CAAeO,KAAhB,EAAuBlB,IAAI,CAACmB,SAAL,CAAeD,KAAtC,EAA6ClB,IAAI,CAACe,MAAL,CAAYG,KAAzD;AAHR,OADQ;AAFN,KADR;AAWE,IAAA,OAAO,EAAE;AACPE,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADD;AAEPC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,oBAAmBtB,OAAQ;AAAnD;AAFA,KAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAiBI,IAlBR;AAuBJ,sBACI;AAAK,IAAA,SAAS,EAAEL,MAAM,CAAC4B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,OAAO,GAAGgB,QAAH,GAAcX,SADxB,CADJ;AAMC,CAvED;;AAwEA,eAAeP,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\nimport { Line, Bar } from 'react-chartjs-2';\n\nconst Chart = ({ data, country }) => {\n\n\n\n    const [dailyData, setDailyData] = useState([0]);\n\n    useEffect(() => {\n        const fetchMyAPI = async () => {\n            const initialDailyData = await fetchDailyData();\n\n            setDailyData(initialDailyData);\n        };\n\n        fetchMyAPI();\n    }, []);\n\n\n    const lineChart = (\n        dailyData[0]\n            ? (\n                <Line\n                    data={{\n                        labels: dailyData.map(({ date }) => date),\n                        datasets: [{\n                            data: dailyData.map(({ confirmed }) => confirmed),\n                            label: 'Infected',\n                            borderColor: '#3333ff',\n                            fill: true,\n                        }, {\n                            data: dailyData.map(({ deaths }) => deaths),\n                            label: 'Deaths',\n                            borderColor: 'red',\n                            backgroundColor: 'rgba(255,0,0,0.5)',\n                            fill: true,\n\n                        }],\n                    }}\n                />) : null\n    );\n\n    \n\n    const barChart = (\n        data.confirmed ? (\n          <Bar\n            data={{\n              labels: ['Infected', 'Recovered', 'Deaths'],\n              datasets: [\n                {\n                  label: 'People',\n                  backgroundColor: ['rgba(0, 0, 255, 0.5)', 'yellow', 'rgba(255, 0, 0, 0.5)'],\n                  data: [data.confirmed.value, data.recovered.value, data.deaths.value],\n                },\n              ],\n            }}\n            options={{\n              legend: { display: false },\n              title: { display: true, text: `Current state in ${country}` },\n            }}\n          />\n        ) : null\n      );\n    \n\n\nreturn (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n)\n\n}\nexport default Chart;"]},"metadata":{},"sourceType":"module"}